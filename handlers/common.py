from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import CommandStart

from config import ADMIN_IDS
from database import Database
from keyboards import get_main_keyboard

router = Router()
db = Database()

@router.message(CommandStart())
async def start(message: Message):
    user = message.from_user
    user_id = user.id
    username = user.username or f"user_{user_id}"

    display_name = user.first_name or ""
    if user.last_name:
        display_name += f" {user.last_name}"

    if not display_name.strip():
        display_name = username

    if user_id in ADMIN_IDS:
        db.add_user(user_id, username, 'admin')
        role = 'admin'
    else:
        role = db.get_user_role(user_id)
        db.add_user(user_id, username, role)
    
    if role == 'user':
        await message.answer(
            "–î–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–º–æ—â—å –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ @freedefer_bot"
        )
    else:
        keyboard = get_main_keyboard(role)
        await message.answer(
            f"–ü—Ä–∏–≤–µ—Ç, {display_name}\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –±–æ—Ç—É",
            reply_markup=keyboard
        )

@router.message(F.text == 'üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
async def show_stats(message: Message):
    user_id = message.from_user.id
    if user_id not in ADMIN_IDS:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
        return

    deffers_stats = db.get_all_deffers_stats()

    total_week = 0
    total_all = 0
    for deffer in deffers_stats:
        total_week += deffer[2]
        total_all += deffer[3]
    
    stats_text = (
        f"üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
        f"–ó–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é: {total_week} –æ—Ç–∑—ã–≤–æ–≤\n"
        f"–í—Å–µ–≥–æ: {total_all} –æ—Ç–∑—ã–≤–æ–≤\n\n"
    )

    for deffer in deffers_stats:
        user_id, username, week_count, total_count = deffer
        display_name = username if username else f"deffer_{user_id}"
        stats_text += (
            f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ @{display_name}:\n"
            f"–ó–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é: {week_count} –æ—Ç–∑—ã–≤–æ–≤\n"
            f"–í—Å–µ–≥–æ: {total_count} –æ—Ç–∑—ã–≤–æ–≤\n\n"
        )
    
    await message.answer(stats_text)

@router.message(F.text == 'üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
async def show_my_profile(message: Message):
    user_id = message.from_user.id
    role = db.get_user_role(user_id)
    
    if role != 'deffer':
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è")
        return
    
    week_count, total_count = db.get_stats(user_id)
    
    stats_text = (
        f"üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n"
        f"–ó–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é: {week_count} –æ—Ç–∑—ã–≤–æ–≤\n"
        f"–í—Å–µ–≥–æ: {total_count} –æ—Ç–∑—ã–≤–æ–≤"
    )
    
    await message.answer(stats_text)

@router.message(F.text == '‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
async def back_to_main_menu(message: Message):
    user_id = message.from_user.id
    role = db.get_user_role(user_id)
    
    if role in ['admin', 'deffer']:
        keyboard = get_main_keyboard(role)
        await message.answer(
            "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=keyboard
        )